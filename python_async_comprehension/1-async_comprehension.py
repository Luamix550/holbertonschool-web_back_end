#!/usr/bin/env python3
"""
The coroutine will collect 10 random numbers using an async
comprehensing over async_generator, then return the 10 random numbers.
"""
import asyncio
import random

async_generator = __import__("0-async_generator").async_generator


async def async_comprehension():
    """
    This coroutine utilizes an asynchronous comprehension to collect
    10 random numbers generated by async_generator.

    Returns:
        list: A list containing 10 random numbers.
    """
    return [num async for num in async_generator()][:10]


async def main():
    """
    The main function executes the async_comprehension coroutine
    and then prints the 10 collected random numbers.
    """
    print(await async_comprehension())

asyncio.run(main())
